# this workflow runs a build with a python version that has debug symbols
# Note that for intrinsics, it only runs what gets compiled
# and would naturally run. It also is limited to what can run in
# a CI environment
# IMPORTANT: binaries are not to be uploaded from this workflow!

name: Ubuntu debug python

# Run CI only when a release is created, on changes to main branch, or any PR
# to main. Do not run CI on any other branch. Also, skip any non-source changes
# from running on CI
on:
  push:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      # gcov/lcov only gets C coverage
      - 'src_py/**'
      # re-include current file to not be excluded
      - '!.github/workflows/build-ubuntu-coverage.yml'

  pull_request:
    branches: main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '.gitignore'
      - '*.rst'
      - '*.md'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/build-ubuntu-debug-python.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-ubuntu-debug-python
  cancel-in-progress: true

jobs:
  debug_python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # if a particular matrix build fails, don't skip the rest
      matrix:
        os: [ ubuntu-24.04 ]
        python: [ 3.12.8 ]

    env:
      # Pip now forces us to either make a venv or set this flag, so we will do
      # this
      PIP_BREAK_SYSTEM_PACKAGES: 1
      # We are using dependencies installed from apt
      PG_DEPS_FROM_SYSTEM: 1

    steps:
    - uses: actions/checkout@v4.2.2

    - name: Install deps
      # https://github.com/actions/runner-images/issues/7192
      # https://github.com/orgs/community/discussions/47863
        # echo -e 'export PYENV_ROOT="$HOME/.pyenv"\nexport PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
        # echo -e 'eval "$(pyenv init --path)"\neval "$(pyenv init -)"' >> ~/.bashrc
      run: |
        sudo apt-get update --fix-missing

        sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
        curl https://pyenv.run | bash

        echo -e 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
        echo -e 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
        echo -e 'eval "$(pyenv init --path)"' >> ~/.bashrc
        echo -e 'eval "$(pyenv init -)"' >> ~/.bashrc

        sudo apt-get install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libfreetype6-dev libportmidi-dev -y

    - name: Build
      id: build
      run: |
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        pyenv install ${{ matrix.python }} --debug --keep
        pyenv global ${{ matrix.python }}-debug
        echo $(python -VV)
        python dev.py build --lax

    - name: Run tests
      env:
        SDL_VIDEODRIVER: "dummy"
        SDL_AUDIODRIVER: "disk"
      run: |
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        pyenv global ${{ matrix.python }}-debug
        python -m pygame.tests -v --exclude opengl,music,timing --time_out 300

    # - name: Generate coverage
    #   id: gen-coverage
    #   # want to continue regardless of whether a test failed or not as long as the job wasn't cancelled
    #   if: ${{ steps.build.conclusion == 'success' && !cancelled() }}
    #   run: |
    #     lcov --capture --directory . --output-file ./coverage.info
    #     genhtml ./coverage.info --output-directory ./out

    # # We upload the generated files under github actions assets
    # - name: Upload coverage html
    #   # want to continue only if the coverage generation was successful
    #   if: ${{ steps.gen-coverage.conclusion == 'success' && !cancelled() }}
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: pygame-wheels-coverage
    #     path: ./out
